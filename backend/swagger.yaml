swagger: "2.0"
info:
   title: Bank Argent API documentation
   description: Contains all available API endpoints in this codebase
   version: "1.0.0"
   termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
   - http
paths:
   /user/login:
      post:
         tags:
            - User Module
         summary: Login
         description: API for Login
         parameters:
            - in: body
              name: body
              description: Login Payload
              required: true
              schema:
                 $ref: "#/definitions/Login"
         produces:
            - application/json
         responses:
            "200":
               description: Login Successfully
               schema:
                  $ref: "#/definitions/LoginResponse"
            "400":
               description: Invalid Fields
            "500":
               description: Internal Server Error
   /user/signup:
      post:
         tags:
            - User Module
         summary: Signup
         description: API for Signup
         parameters:
            - in: body
              name: body
              description: Signup Payload
              required: true
              schema:
                 $ref: "#/definitions/User"
         produces:
            - application/json
         responses:
            "200":
               description: Signup Successfully
               schema:
                  $ref: "#/definitions/ApiResponse"
            "400":
               description: Invalid Fields
            "500":
               description: Internal Server Error
   /user/profile:
      get:
         security:
            - Bearer: []
         tags:
            - User Module
         summary: User Profile API
         description: API for fetching a user profile
         responses:
            "200":
               description: User profile retrieved successfully
               schema:
                  $ref: "#/definitions/ApiResponse"
            "400":
               description: Invalid Fields
            "500":
               description: Internal Server Error
      put:
         security:
            - Bearer: []
         tags:
            - User Module
         summary: User Profile API
         description: API for updating a user profile
         parameters:
            - in: body
              name: body
              description: Update user profile attributes
              required: true
              schema:
                 $ref: "#/definitions/UserProfile"
         produces:
            - application/json
         responses:
            "200":
               description: User profile updated successfully
               schema:
                  $ref: "#/definitions/ApiResponse"
            "400":
               description: Invalid Fields
            "500":
               description: Internal Server Error
   /accounts:
      get:
         tags:
            - User Module
         security:
            - Bearer: []
         summary: Get all user accounts
         description: API for fetching all user accounts
         responses:
            "200":
               description: User accounts retrieved successfully
               schema:
                  type: array
                  items:
                     $ref: "#/definitions/Account"
            "401":
               description: Unauthorized
   /accounts/{account-id}:
      get:
         tags:
            - User Module
         security:
            - Bearer: []
         summary: Get specific account
         description: API for fetching a specific user account
         parameters:
            - in: path
              name: account-id
              required: true
              description: Account ID
              type: string
         responses:
            "200":
               description: Account retrieved successfully
               schema:
                  $ref: "#/definitions/Account"
            "404":
               description: Account not found
            "401":
               description: Unauthorized
   /accounts/{account-id}/transactions:
      get:
         tags:
            - Transactions
         summary: Get all transactions for a specific account
         description: Retrieves transactions for a specific account. By default, returns current month's transactions.
         parameters:
            - in: path
              name: account-id
              required: true
              description: Account ID
              type: string
            - in: query
              name: month
              required: false
              description: Month for which to retrieve transactions (format YYYY-MM). Defaults to current month if not specified.
              type: string
         responses:
            "200":
               description: Transactions retrieved successfully
               schema:
                  type: array
                  items:
                     $ref: "#/definitions/Transaction"
            "400":
               description: Invalid month format
            "401":
               description: Unauthorized access
            "403":
               description: Forbidden - Account belongs to another user
            "404":
               description: Account not found
            "500":
               description: Internal Server Error
   /transaction/{id}:
      get:
         tags:
            - Transactions
         summary: Get transaction details
         description: Retrieves detailed information about a specific transaction
         parameters:
            - in: path
              name: id
              required: true
              description: Transaction ID
              type: string
         produces:
            - application/json
         responses:
            "200":
               description: Transaction details retrieved successfully
               schema:
                  $ref: "#/definitions/TransactionDetails"
            "401":
               description: Unauthorized access
            "403":
               description: Forbidden - Transaction belongs to another user
            "404":
               description: Transaction not found
            "500":
               description: Internal Server Error
      put:
         tags:
            - Transactions
         summary: Update transaction information
         description: Modify category and notes of a specific transaction. Other fields cannot be modified.
         parameters:
            - in: path
              name: id
              required: true
              description: Transaction ID
              type: string
            - in: body
              name: transactionUpdate
              required: true
              description: Fields to update
              schema:
                 type: object
                 properties:
                    category:
                       type: string
                       description: New category for the transaction
                    notes:
                       type: string
                       description: New notes for the transaction
         responses:
            "200":
               description: Transaction updated successfully
               schema:
                  $ref: "#/definitions/TransactionDetails"
            "400":
               description: Invalid input data
            "401":
               description: Unauthorized access
            "403":
               description: Forbidden - Transaction belongs to another user
            "404":
               description: Transaction not found
            "500":
               description: Internal Server Error

definitions:
   Login:
      type: object
      properties:
         email:
            type: string
         password:
            type: string
   LoginResponse:
      type: object
      properties:
         token:
            type: string
   User:
      type: object
      properties:
         email:
            type: string
         password:
            type: string
         firstName:
            type: string
         lastName:
            type: string
   ApiResponse:
      type: object
      properties:
         message:
            type: string
   UserProfile:
      type: object
      properties:
         firstName:
            type: string
         lastName:
            type: string
   Transaction:
      type: object
      properties:
         id:
            type: string
            readOnly: true
         date:
            type: string
            readOnly: true
         description:
            type: string
            readOnly: true
         amount:
            type: number
            readOnly: true
         balance:
            type: number
            readOnly: true
         category:
            type: string
         note:
            type: string
   GroupedTransactions:
      type: object
      properties:
         accountId:
            type: string
            readOnly: true
         transactions:
            type: array
            items:
               $ref: "#/definitions/Transaction"
   TransactionDetails:
      type: object
      properties:
         id:
            type: string
            readOnly: true
         date:
            type: string
            format: date-time
            readOnly: true
         description:
            type: string
            readOnly: true
         amount:
            type: number
            format: double
            readOnly: true
         type:
            type: string
            enum: [CREDIT, DEBIT]
            readOnly: true
         category:
            type: string
            description: Category of the transaction (can be modified)
         notes:
            type: string
            description: Additional notes about the transaction (can be modified)
   Account:
      type: object
      properties:
         id:
            type: string
         name:
            type: string
